{
  // Default options
  'functions': true,
  'variableNameTransforms': ['underscored']
}

{{#extend "stylus"}}
{{#content "sprites" mode="append"}}
{{#each retina_sprites}}
${{strings.name_name}} = '{{name}}';
${{strings.name_x}} = {{px.x}};
${{strings.name_y}} = {{px.y}};
${{strings.name_offset_x}} = {{px.offset_x}};
${{strings.name_offset_y}} = {{px.offset_y}};
${{strings.name_width}} = {{px.width}};
${{strings.name_height}} = {{px.height}};
${{strings.name_total_width}} = {{px.total_width}};
${{strings.name_total_height}} = {{px.total_height}};
${{strings.name_image}} = '{{{escaped_image}}}';
${{strings.name}} = {{px.x}} {{px.y}} {{px.offset_x}} {{px.offset_y}} {{px.width}} {{px.height}} {{px.total_width}} {{px.total_height}} '{{{escaped_image}}}' '{{name}}';
{{/each}}
{{/content}}

{{#content "spritesheet" mode="append"}}
${{retina_spritesheet_info.strings.name_width}} = {{retina_spritesheet.px.width}};
${{retina_spritesheet_info.strings.name_height}} = {{retina_spritesheet.px.height}};
${{retina_spritesheet_info.strings.name_image}} = '{{{retina_spritesheet.escaped_image}}}';
${{retina_spritesheet_info.strings.name_sprites}} = ({{#each retina_sprites}}${{strings.name}}, {{/each}});
${{retina_spritesheet_info.strings.name}} = {{retina_spritesheet.px.width}} {{retina_spritesheet.px.height}} '{{{retina_spritesheet.escaped_image}}}' ${{retina_spritesheet_info.strings.name_sprites}};

/*
These variables are known as "retina groups", they are mappings to `normal` and `retina` sprite variables.

The list formats are intended to be used with mixins like `retinaSprite` and `retinaSprites`
*/
{{#each retina_groups}}
${{strings.name_name}} = '{{name}}';
${{strings.name}} = '{{name}}' ${{normal.strings.name}} ${{retina.strings.name}};
{{/each}}
${{retina_groups_info.strings.name}} ={{#each retina_groups}} ${{strings.name}}{{/each}};
{{/content}}

{{#content "sprite-functions" mode="append"}}
{{#if options.functions}}

/*
The `spriteRetina` mixin is intended to be used on a "retina group".

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon_home = 'icon-home' $icon_home_normal $icon_home_retina;

.icon_home {
  retinaSprite($icon_home)
}
*/
@mixin spriteBackgroundSize($sprite) {
  background-size: $sprite[6] $sprite[7];
}

@mixin retinaSprite($retina_group) {
  $normal_sprite = $retina_group[1];
  $retina_sprite = $retina_group[2];
  sprite($normal_sprite)

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    spriteImage($retina_sprite)
    spriteBackgroundSize($normal_sprite)
  }
}
{{/if}}
{{/content}}

{{#content "spritesheet-functions" mode="append"}}
{{#if options.functions}}

/*
The `retinaSprites` mixin generates classes for retina sprite groups

retinaSprites($retina_groups);
*/
@mixin retinaSprites($retina_groups) {
  @each $retina_group in $retina_groups {
    $sprite_name = $retina_group[0];
    .#{$sprite_name} {
      retinaSprite($retina_group);
    }
  }
}
{{/if}}
{{/content}}
{{/extend}}
