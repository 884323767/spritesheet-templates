{
  // Default options
  'functions': true,
  'variableNameTransforms': ['dasherize']
}

{{#extend "scss"}}
{{#content "sprites" mode="append"}}
{{#each retina_sprites}}
${{strings.name_name}}: '{{name}}';
${{strings.name_x}}: {{px.x}};
${{strings.name_y}}: {{px.y}};
${{strings.name_offset_x}}: {{px.offset_x}};
${{strings.name_offset_y}}: {{px.offset_y}};
${{strings.name_width}}: {{px.width}};
${{strings.name_height}}: {{px.height}};
${{strings.name_total_width}}: {{px.total_width}};
${{strings.name_total_height}}: {{px.total_height}};
${{strings.name_image}}: '{{{escaped_image}}}';
${{strings.name}}: ({{px.x}}, {{px.y}}, {{px.offset_x}}, {{px.offset_y}}, {{px.width}}, {{px.height}}, {{px.total_width}}, {{px.total_height}}, '{{{escaped_image}}}', '{{name}}', );
{{/each}}
{{/content}}

{{#content "spritesheet" mode="append"}}
{{! TODO: Is it possible to create a block here named `retina_sprites` and inherit that later on? }}
${{retina_spritesheet.strings.name_width}}: {{retina_spritesheet.px.width}};
${{retina_spritesheet.strings.name_height}}: {{retina_spritesheet.px.height}};
${{retina_spritesheet.strings.name_image}}: '{{{retina_spritesheet.escaped_image}}}';
${{retina_spritesheet.strings.name_sprites}}: ({{#each sprites}}${{strings.name}}, {{/each}});
${{retina_spritesheet.strings.name}}: ({{retina_spritesheet.px.width}}, {{retina_spritesheet.px.height}}, '{{{retina_spritesheet.escaped_image}}}', ${{retina_spritesheet.strings.name_sprites}}, );
{{#each retina_pairs}}
${{strings.name}}: ${{normal.strings.name}}, ${{retina.strings.name}};
{{/each}}
{{/content}}

{{#content "sprite-functions" mode="append"}}
{{! TODO: We need to include the `if's` }}
@mixin sprite-background-size($sprite) {
  background-size: nth($sprite, 6) nth($sprite, 7);
}

@mixin retina-sprite($sprite-pair) {
  @include sprite(nth($sprite-pair, 0));

  {{! TODO: Google to compare with other results }}
  {{! TODO: Remove extra whitespace... }}
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
         only screen and (   min--moz-device-pixel-ratio: 2),
         only screen and (     -o-min-device-pixel-ratio: 2/1),
         only screen and (        min-device-pixel-ratio: 2),
         only screen and (                min-resolution: 192dpi),
         only screen and (                min-resolution: 2dppx) {
    @include sprite-image(nth($sprite-pair, 1));
    @include sprite-background-size(nth($sprite-pair, 0));
  }
}
{{/content}}

{{#content "spritesheet-functions"}}
@mixin retina-sprites($sprite-pairs) {
  @each $sprite-pair in $sprite-pairs {
    $sprite-name: nth(nth($sprite-pair, 0), 10);
    .#{$sprite-name} {
      @include sprite-pair($sprite-pair);
    }
  }
}
{{/content}}
{{/extend}}


