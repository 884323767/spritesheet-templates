{
  // Default options
  'functions': true,
  'variableNameTransforms': ['dasherize']
}

{{#extend "scss"}}
{{#content "sprites" mode="append"}}
{{#each retina_sprites}}
${{strings.name_name}}: '{{name}}';
${{strings.name_x}}: {{px.x}};
${{strings.name_y}}: {{px.y}};
${{strings.name_offset_x}}: {{px.offset_x}};
${{strings.name_offset_y}}: {{px.offset_y}};
${{strings.name_width}}: {{px.width}};
${{strings.name_height}}: {{px.height}};
${{strings.name_total_width}}: {{px.total_width}};
${{strings.name_total_height}}: {{px.total_height}};
${{strings.name_image}}: '{{{escaped_image}}}';
${{strings.name}}: ({{px.x}}, {{px.y}}, {{px.offset_x}}, {{px.offset_y}}, {{px.width}}, {{px.height}}, {{px.total_width}}, {{px.total_height}}, '{{{escaped_image}}}', '{{name}}', );
{{/each}}
{{/content}}

{{#content "spritesheet" mode="append"}}
{{! TODO: Is it possible to create a block here named `retina_sprites` and inherit that later on? }}
${{retina_spritesheet.strings.name_width}}: {{retina_spritesheet.px.width}};
${{retina_spritesheet.strings.name_height}}: {{retina_spritesheet.px.height}};
${{retina_spritesheet.strings.name_image}}: '{{{retina_spritesheet.escaped_image}}}';
${{retina_spritesheet.strings.name_sprites}}: ({{#each sprites}}${{strings.name}}, {{/each}});
${{retina_spritesheet.strings.name}}: ({{retina_spritesheet.px.width}}, {{retina_spritesheet.px.height}}, '{{{retina_spritesheet.escaped_image}}}', ${{retina_spritesheet.strings.name_sprites}}, );
{{#each retina_pairs}}
${{strings.name}}: '{{name}}', ${{normal.strings.name}}, ${{retina.strings.name}};
{{/each}}
// TODO: Define variable for all pairs
// TODO: Rename `pairs` to `groups` as its more appropriate now (`sprite-group`) and `sprite-groups`. Buuut how do we establish it's retina specific? I think retina-groups is better.
{{/content}}

{{#content "sprite-functions" mode="append"}}
{{! TODO: We need to include the `if's` }}
// TODO: Consider renaming sprite pairs to retina pairs
// TODO: We need to define retina pairs in our template

@mixin sprite-background-size($sprite) {
  background-size: nth($sprite, 7) nth($sprite, 8);
}

@mixin retina-sprite($sprite-pair) {
  @include sprite(nth($sprite-pair, 2));

  {{! https://css-tricks.com/snippets/css/retina-display-media-query/ }}
  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image(nth($sprite-pair, 3));
    @include sprite-background-size(nth($sprite-pair, 2));
  }
}
{{/content}}

{{#content "spritesheet-functions"}}
@mixin retina-sprites($sprite-pairs) {
  @each $sprite-pair in $sprite-pairs {
    $sprite-name: nth($sprite-pair, 1);
    .#{$sprite-name} {
      @include sprite-pair($sprite-pair);
    }
  }
}
{{/content}}
{{/extend}}


