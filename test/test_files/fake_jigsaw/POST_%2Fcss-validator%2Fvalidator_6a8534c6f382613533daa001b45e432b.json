{
  "request": {
    "httpVersion": "1.1",
    "headers": {
      "content-type": "multipart/form-data; boundary=--------------------------595757203364428472529374",
      "host": "localhost:1337",
      "connection": "keep-alive",
      "transfer-encoding": "chunked"
    },
    "trailers": {},
    "method": "POST",
    "url": "/css-validator/validator",
    "bodyEncoding": "utf8",
    "body": "----------------------------595757203364428472529374\r\nContent-Disposition: form-data; name=\"output\"\r\n\r\nsoap12\r\n----------------------------595757203364428472529374\r\nContent-Disposition: form-data; name=\"w3cUrl\"\r\n\r\nhttp://localhost:1337/css-validator/validator\r\n----------------------------595757203364428472529374\r\nContent-Disposition: form-data; name=\"highWaterMark\"\r\n\r\n1024000\r\n----------------------------595757203364428472529374\r\nContent-Disposition: form-data; name=\"text\"\r\n\r\n/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n/*\nThese \"retina group\" variables are mappings for the naming and pairing of normal and retina sprites.\n\nThe list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.\n*/\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n*/\n/*\nThe `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.\n  It should be used with a \"retina group\" variable.\n\nThe media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/\n\n@icon-home-group: 'icon-home' @icon-home @icon-home-2x;\n\n.icon-home {\n  .retina-sprite(@icon-home-group);\n}\n*/\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\n/*\nThe `.retina-sprites` mixin generates a CSS rule and media query for retina groups\n  This yields the same output as CSS retina template but can be overridden in LESS\n\n.retina-sprites(@retina-groups);\n*/\n.'sprite-dash-case' {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n@media  (min-resolution: 192dpi) {\n  .'sprite-dash-case' {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n}\n.'sprite_snake_case' {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: -10px -20px;\n  width: 20px;\n  height: 30px;\n}\n@media  (min-resolution: 192dpi) {\n  .'sprite_snake_case' {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n}\n.'spriteCamelCase' {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: -30px -50px;\n  width: 50px;\n  height: 50px;\n}\n@media  (min-resolution: 192dpi) {\n  .'spriteCamelCase' {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n}\n\r\n----------------------------595757203364428472529374--"
  },
  "response": {
    "httpVersion": "1.1",
    "headers": {
      "cache-control": "no-cache",
      "date": "Wed, 29 Jul 2015 06:11:06 GMT",
      "pragma": "no-cache",
      "transfer-encoding": "chunked",
      "content-language": "en",
      "content-type": "application/soap+xml;charset=utf-8",
      "server": "Jigsaw/2.3.0-beta3",
      "vary": "Accept-Language",
      "x-w3c-validator-errors": "9",
      "x-w3c-validator-status": "Invalid"
    },
    "trailers": {},
    "statusCode": 200,
    "bodyEncoding": "utf8",
    "body": "<?xml version='1.0' encoding=\"utf-8\"?>\n<env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\">\n    <env:Body>\n        <m:cssvalidationresponse\n            env:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\"\n            xmlns:m=\"http://www.w3.org/2005/07/css-validator\">\n            <m:uri>TextArea</m:uri>\n            <m:checkedby>http://jigsaw.w3.org/css-validator/</m:checkedby>\n            <m:csslevel>css3</m:csslevel>\n            <m:date>2015-07-29T06:11:06Z</m:date>\n            <m:validity>false</m:validity>\n            <m:result>\n                <m:errors xml:lang=\"en\">\n                    <m:errorcount>9</m:errorcount>\n                                                                    \n                <m:errorlist>\n                    <m:uri>file://localhost/TextArea</m:uri>\n                            \n                        <m:error>\n                            <m:line>61</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                skippedString\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                /*\nThese &quot;retina group&quot; variables are mappings for the naming and pairing of normal and retina sprites.\n\nThe list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.\n*/\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n*/\n/*\nThe `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.\n  It should be used with a &quot;retina group&quot; variable.\n\nThe media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/\n\n@icon-home-group: &apos;icon-home&apos; @icon-home @icon-home-2x;\n\n.icon-home {\n  .retina-sprite(@icon-home-group);\n}\n*/\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\n/*\nThe `.retina-sprites` mixin generates a CSS rule and media query for retina groups\n  This yields the same output as CSS retina template but can be overridden in LESS\n\n.retina-sprites(@retina-groups);\n*/\n.&apos;sprite-dash-case&apos; {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>66</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                unrecognized\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                .&apos;sprite-dash-case&apos; {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>67</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                skippedString\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                }\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>73</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                skippedString\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                .&apos;sprite_snake_case&apos; {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: -10px -20px;\n  width: 20px;\n  height: 30px;\n}\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>78</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                unrecognized\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                .&apos;sprite_snake_case&apos; {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>79</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                skippedString\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                }\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>85</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                skippedString\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                .&apos;spriteCamelCase&apos; {\n  background-image: url(nested/dir/spritesheet.png);\n  background-position: -30px -50px;\n  width: 50px;\n  height: 50px;\n}\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>90</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                unrecognized\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                .&apos;spriteCamelCase&apos; {\n    background-image: url(nested/dir/spritesheet@2x.png);\n    background-size: 80px 100px;\n  }\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n                                                    \n                        <m:error>\n                            <m:line>91</m:line>\n                            <m:errortype>parse-error</m:errortype>\n                            <m:context></m:context>        \n                            <m:errorsubtype>\n                                skippedString\n                            </m:errorsubtype>\n                            <m:skippedstring>\n                                }\n                            </m:skippedstring>\n                            <m:type>generator.unrecognize</m:type>\n        \n                            <m:message>\n        \n                                Parse Error\n                            </m:message>\n                        </m:error>\n            \n                    </m:errorlist>\n        \n                </m:errors>\n                <m:warnings xml:lang=\"en\">\n                    <m:warningcount>0</m:warningcount>\n                </m:warnings>\n            </m:result>\n        </m:cssvalidationresponse>\n    </env:Body>\n</env:Envelope>\n\n"
  }
}